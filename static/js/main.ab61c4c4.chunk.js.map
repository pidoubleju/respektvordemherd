{"version":3,"sources":["prismic-configuration.js","pages/Preview.js","pages/NotFound.js","components/HighlightPostsSidbar.js","components/HighlightPosts.js","components/ShowcaseCategory.js","components/CategoryShowcase.js","pages/Landingpage.js","components/atoms/Heading.js","components/atoms/Image.js","components/PostPreview.js","components/Grid.js","components/PostList.js","hooks/useCapitalization.js","pages/Category.js","pages/SearchResults.js","components/NavigationItem.js","components/Search.js","components/Navigation.js","components/atoms/TextSlice.js","components/atoms/Button.js","components/atoms/BannerSlice.js","components/Slice.js","pages/PostDetail.js","App.js","index.js"],"names":["apiEndpoint","linkResolver","doc","type","uid","client","Prismic","accessToken","Preview","history","location","useEffect","params","qs","parse","search","slice","token","console","warn","previewSession","then","url","push","notFoundStyle","display","flexDirection","justifyContent","height","alignItems","NotFound","className","style","to","HighlightPostsSidebar","posts","dispatch","map","post","blog_header","data","key","id","onClick","ACTIONS","SET_ACTIVE","payload","activePost","text","SET_POSTS","reducer","state","action","HighlightPosts","useHistory","useReducer","Object","keys","length","galerie","teaser","abschnitt_1_text","galerie_bild","alt","tags","viewPostDetail","div","initial","scale","y","animate","transition","duration","img","x","src","renderActivePost","filter","indexOf","ShowcaseCategory","categoryInfo","index","width","kategorie_bild","dimensions","kategorie_titel","kategorie_text","CategoryShowcase","header","kategorien","kat","Landingpage","useState","setDocData","a","getSingle","fetchLinks","result","fetchData","Fragment","Heading","headingData","headingType","split","headingContent","Array","isArray","React","createElement","Image","fullWidth","imageAlt","PostPreview","RichText","render","Grid","items","item","PostList","postElements","useCapitalization","expression","toUpperCase","Category","match","name","categoryHeader","query","Predicates","at","results","SearchResults","useLocation","searchTerm","NavigationItem","destination","label","Search","searchMode","setSearchMode","searchContent","setSearchContent","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","onKeyUp","e","keyCode","fulltext","pathname","onChange","target","Navigation","navItems","setNavItems","notFound","toggleNotFound","mobileNavActive","toggleMobileNav","wideScreenNav","fillRule","clipRule","mobileNav","exit","TextSlice","primary","i","Button","children","BannerSlice","buttonLabel","buttonLink","description","imageBanner","bannerTitle","href","Slice","renderSliceType","PostDetail","setNotFound","useParams","getByUID","body","App","repoName","exec","Helmet","async","defer","exact","from","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab61c4c4.chunk.js","sourcesContent":["import Prismic from 'prismic-javascript';\n\n// -- Prismic API endpoint\n// Determines which repository to query and fetch data from\nexport const apiEndpoint = 'https://respektvordemherd.cdn.prismic.io/api/v2';\n\n// -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\nconst accessToken = '';\n\n// -- Link resolution rules\n// Manages the url links to internal Prismic documents\nexport const linkResolver = (doc) => {\n\tif (doc.type === 'page') return `/page/${doc.uid}`;\n\treturn '/';\n};\n\n// Client method to query documents from the Prismic repo\nexport const client = Prismic.client(apiEndpoint, { accessToken });\n","import { useEffect } from 'react';\nimport qs from 'qs';\nimport { client, linkResolver } from '../prismic-configuration';\n\n/**\n * Prismic preview endpoint component\n */\nconst Preview = ({ history, location }) => {\n\tuseEffect(() => {\n\t\tconst params = qs.parse(location.search.slice(1));\n\t\tif (!params.token) {\n\t\t\treturn console.warn(`Unable to retrieve session token from provided url. \\n\n      Check https://prismic.io/docs/rest-api/beyond-the-api/the-preview-feature for more info`);\n\t\t}\n\n\t\t// Retrieve the correct URL for the document being previewed.\n\t\t// Once fetched, redirect to the given url\n\t\tclient\n\t\t\t.previewSession(params.token, linkResolver, '/')\n\t\t\t.then((url) => history.push(url));\n\t});\n\treturn null;\n};\n\nexport default Preview;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Page not found (404) componenet\n */\nconst NotFound = () => {\n\treturn (\n\t\t<div className='not-found' style={notFoundStyle}>\n\t\t\t<h1>404</h1>\n\t\t\t<h2>Document not found</h2>\n\t\t\t<p>\n\t\t\t\t<Link to='/'>Return to homepage</Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nconst notFoundStyle = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'center',\n\theight: '50vw',\n\talignItems: 'center',\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { ACTIONS } from './HighlightPosts';\n\nfunction HighlightPostsSidebar({ posts, dispatch }) {\n\treturn (\n\t\t<div className='post-sidebar flex'>\n\t\t\t{posts.map((post) => {\n\t\t\t\tconst { blog_header } = post.post.data;\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='post'\n\t\t\t\t\t\tkey={post.post.id}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\ttype: ACTIONS.SET_ACTIVE,\n\t\t\t\t\t\t\t\tpayload: { activePost: post },\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h4>{blog_header[0].text}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default HighlightPostsSidebar;\n","import React, { useEffect, useReducer } from 'react';\nimport HighlightPostsSidebar from './HighlightPostsSidbar';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/components/Highlightposts.css';\nimport { motion } from 'framer-motion';\n\nexport const ACTIONS = {\n\tSET_POSTS: 'set-posts',\n\tSET_ACTIVE: 'set-active',\n};\n\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\tcase ACTIONS.SET_ACTIVE:\n\t\treturn { activePost: action.payload.activePost };\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nfunction HighlightPosts({ posts }) {\n\tlet history = useHistory();\n\tconst [state, dispatch] = useReducer(reducer, {\n\t\tactivePost: {},\n\t});\n\n\n\tfunction viewPostDetail({post}) {\n\t\thistory.push(`/category/${post.tags[0]}/${post.uid}`);\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch({ type: ACTIONS.SET_ACTIVE, payload: { activePost: posts[0] } });\n\t}, [posts]);\n\n\tfunction renderActivePost(post) {\n\t\tif (!post || Object.keys(post).length < 1) {\n\t\t\treturn;\n\t\t}\n\t\tconst { galerie, blog_header, abschnitt_1_text: teaser } = post.post.data;\n\t\tconst { alt, url } = galerie[0].galerie_bild;\n\t\treturn (\n\t\t\t<div className='post flex' key={post.post.id} onClick={() => { viewPostDetail(post) }}>\n\t\t\t\t<motion.div initial={{scale: 0.9, y: 200}} animate={{ scale: 1.0, y: 0 }} transition={{ duration: 0.3 }}\n\t\t\t\t\t\t\tclassName='wrapper'>\n\t\t\t\t\t<h1 className='post-header'>{blog_header[0].text}</h1>\n\t\t\t\t\t<p className='teaser-text'>{teaser[0].text}</p>\n\t\t\t\t</motion.div>\n\t\t\t\t<motion.img  initial={{x: 70}} animate={{ x: 0 }} transition={{ duration: 0.3 }}\n\t\t\t\t\t\t\tsrc={url} alt={alt} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='highlight-posts container flex justify-center'>\n\t\t\t<div className='wrapper relative w-100'>\n\t\t\t\t<div className='highlight-post'>\n\t\t\t\t\t{renderActivePost(state.activePost)}\n\t\t\t\t</div>\n\t\t\t\t<HighlightPostsSidebar\n\t\t\t\t\tposts={posts.filter(\n\t\t\t\t\t\t(post) => posts.indexOf(post) !== posts.indexOf(state.activePost)\n\t\t\t\t\t)}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default HighlightPosts;\n","import React from 'react';\nimport '../styles/components/ShowcaseCategory.css';\n\nfunction ShowcaseCategory({ categoryInfo }) {\n\treturn (\n\t\t<div\n\t\t\tclassName={`showcase-category flex w-100 ${\n\t\t\t\tcategoryInfo.index % 2 !== 0 ? 'order-switch' : ''\n\t\t\t}`}\n\t\t>\n\t\t\t<div className='wrapper flex w-100 justify-between'>\n\t\t\t\t<div className='cat-img flex'>\n\t\t\t\t\t<img\n\t\t\t\t\t\twidth={categoryInfo.kategorie_bild.dimensions.width}\n\t\t\t\t\t\tsrc={categoryInfo.kategorie_bild.url}\n\t\t\t\t\t\talt='category-img'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='wrapper cat-info flex'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span className='h3'>{categoryInfo.kategorie_titel[0].text}</span>\n\t\t\t\t\t\t{categoryInfo.kategorie_text[0].text}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ShowcaseCategory;\n","import React from 'react';\nimport ShowcaseCategory from './ShowcaseCategory';\n\nfunction CategoryShowcase({ data }) {\n\treturn (\n\t\t<div className='category-showcase container flex justify-center'>\n\t\t\t<h2 className='m-b-xlarge'>{data.header[0].text}</h2>\n\t\t\t{data.kategorien.map((kat, index) => {\n\t\t\t\tkat.index = index;\n\t\t\t\treturn <ShowcaseCategory categoryInfo={kat} key={index} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default CategoryShowcase;\n","import React, { useEffect, useState } from 'react';\nimport { client } from '../prismic-configuration';\nimport '../styles/pages/Landingpage.css';\nimport HighlightPosts from '../components/HighlightPosts';\nimport CategoryShowcase from '../components/CategoryShowcase';\n\nconst Landingpage = () => {\n\tconst [doc, setDocData] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await client.getSingle('landingpage', {\n\t\t\t\tfetchLinks: [\n\t\t\t\t\t'post.galerie',\n\t\t\t\t\t'post.blog_header',\n\t\t\t\t\t'post.abschnitt_1_text',\n\t\t\t\t],\n\t\t\t});\n\t\t\tif (result) {\n\t\t\t\treturn setDocData(result);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<div className='landingpage background-dark flex fill-height'>\n\t\t\t{doc && \n\t\t\t\t<React.Fragment>\n\t\t\t\t<HighlightPosts posts={doc.data['highlight-posts']} />\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h2>{doc.data['intro_text'][0].text}</h2>\n\t\t\t\t\t<p className='basic-columns'>{doc.data['intro_text1'][0].text}</p>\n\t\t\t\t</div>\n\t\t\t\t<CategoryShowcase\n\t\t\t\t\tdata={{\n\t\t\t\t\t\theader: doc.data['kategorie_header'],\n\t\t\t\t\t\tkategorien: doc.data['post_kategorien'],\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Landingpage;\n","import React from 'react';\n\nfunction Heading({ headingData, type }) {\n\tconst headingType = type ? type : headingData[0].type.split('heading')[1];\n\tconst headingContent = Array.isArray(headingData)\n\t\t? headingData[0].text\n\t\t: headingData.text;\n\treturn React.createElement(`h${headingType}`, null, headingContent);\n}\n\nexport default Heading;\n","import React from 'react';\n\nfunction Image({ data, fullWidth }) {\n\tconst imageAlt = data.alt ? data.alt : 'missing alt text';\n\tconst { width, height } = data.dimensions;\n\treturn <img src={data.url} alt={imageAlt} width={width} height={height} className={fullWidth ? 'w-100' : ''}/>;\n}\n\nexport default Image;\n","import React from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport Heading from '../components/atoms/Heading';\nimport Image from '../components/atoms/Image';\nimport { useHistory } from 'react-router-dom';\n\nfunction PostPreview({ data }) {\n\tlet history = useHistory();\n\tfunction viewPostDetail() {\n\t\thistory.push(`/category/${data.tags[0]}/${data.uid}`);\n\t}\n\n\treturn (\n\t\t<div className='post-preview' onClick={viewPostDetail}>\n\t\t\t<div className='post-img'>\n\t\t\t\t<Image fullWidth={true} data={data.data['post_hintergrund']} />\n\t\t\t</div>\n\t\t\t<Heading type='3' headingData={data.data['blog_header']} />\n\t\t\t{RichText.render(data.data['abschnitt_1_text'])}\n\t\t</div>\n\t);\n}\n\nexport default PostPreview;\n","import React from 'react';\nimport '../styles/components/Grid.css'\n\nfunction Grid({items}) {\n    return (\n        <div className={`grid flex ${items.length < 3 ? 'sparse-data-layout' : ''}`}>\n            {items.map((item, index) => <div className=\"grid-item\" key={index}>{item}</div>)}\n        </div>\n    )\n}\n\nexport default Grid;\n","import React from 'react';\nimport PostPreview from './PostPreview';\nimport Grid from './Grid';\n\nfunction PostList({ posts }) {\n\tconst postElements = posts.map((post) => <PostPreview key={post.id} data={post} />);\n\treturn <Grid items={postElements} />;\n}\n\nexport default PostList;\n","const useCapitalization = (expression) => {\n    return `${expression[0].toUpperCase()}${expression.slice(1)}`;\n}\n\nexport default useCapitalization;","import React, { useState, useEffect } from 'react';\nimport { client } from '../prismic-configuration';\nimport Prismic from 'prismic-javascript';\nimport PostList from '../components/PostList';\nimport Heading from '../components/atoms/Heading';\nimport useCapitalization from '../hooks/useCapitalization';\n\nfunction Category({\n\tmatch: {\n\t\tparams: { name },\n\t},\n}) {\n\tconst [doc, setDocData] = useState([]);\n\tconst categoryHeader = useCapitalization(name);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await client.query(\n\t\t\t\tPrismic.Predicates.at('document.tags', [name])\n\t\t\t);\n\t\t\tif (result.results.length > 0) {\n\t\t\t\tsetDocData(result.results);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [name]);\n\n\treturn (\n\t\t<div className='category background-dark fill-height'>\n\t\t\t<div className='container'>\n\t\t\t\t<Heading type=\"1\" headingData={{ text: categoryHeader }} />\n\t\t\t\t<PostList posts={doc} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Category;\n","import React from 'react';\nimport PostList from '../components/PostList';\nimport Heading from '../components/atoms/Heading';\nimport {useLocation, useHistory} from 'react-router-dom'\n\nfunction SearchResults() {\n\tconst location = useLocation();\n\tlet history = useHistory();\n\tif (!location.state) {\n\t\thistory.push('/home');\n\t}\n\treturn (\n\t\t<div className='category background-dark fill-height'>\n\t\t\t<div className='container'>\n\t\t\t\t<Heading type=\"1\" headingData={{ text: 'Suchergebnisse' }} />\n\t\t\t\t{location.state && location.state.results.length > 0 &&\n\t\t\t\t\t<PostList posts={location.state.results} />\n\t\t\t\t}\n\t\t\t\t{location.state && location.state.results.length === 0 &&\n\t\t\t\t\t<Heading type=\"4\" headingData={{ text: `Für den Begriff \"${location.state.searchTerm}\" wurden keine Einträge gefunden` }} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SearchResults;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nfunction NavigationItem({item}) {\n    return (\n        <div className=\"nav-item\">\n            <Link to={item.destination[0].text}>{item.label[0].text}</Link>\n        </div>\n    )\n}\n\n\nexport default NavigationItem;","import React, {useState} from 'react';\nimport { client } from '../prismic-configuration';\nimport Prismic from 'prismic-javascript';\nimport {useHistory} from 'react-router-dom';\n\nfunction Search() {\n    const [searchMode, setSearchMode] = useState('passive');\n    const [searchContent, setSearchContent] = useState('');\n    let history = useHistory();\n\n    function startSearch(e) {\n        // Check for enter keyup\n        if (e.keyCode !== 13) {\n            return;\n        }\n        client.query([\n            Prismic.Predicates.at('document.type', 'post'),\n            Prismic.Predicates.fulltext('document', searchContent)\n        ]).then(result => {\n            history.push({pathname: '/search', state: {results: result.results, searchTerm: searchContent}});\n            setSearchContent('');\n        })\n    }\n\n\n    return (\n        <div className=\"search\">\n            <svg onClick={() => { setSearchMode(searchMode === 'active' ? 'passive' : 'active') }}  width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n            {searchMode === 'active' &&\n                <input type=\"text\" value={searchContent} onKeyUp={startSearch} onChange={(e) => { setSearchContent(e.target.value) }}/>\n            }\n        </div>\n    )\n}\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport { client } from '../prismic-configuration';\nimport NotFound from '../pages/NotFound';\nimport NavigationItem from '../components/NavigationItem';\nimport '../styles/components/Navigation.css'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useLocation } from \"react-router-dom\";\nimport Search from './Search';\n\nfunction Navigation() {\n\tlet location = useLocation();\n\tconst [navItems, setNavItems] = useState([]);\n\tconst [notFound, toggleNotFound] = useState(false);\n\tconst [mobileNavActive, toggleMobileNav] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n            const result = await client.getSingle('navigation');\n\t\t\tif (result && result.data && result.data['nav-link']) {\n\t\t\t\treturn setNavItems(result.data['nav-link']);\n\t\t\t} else {\n\t\t\t\ttoggleNotFound(true);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (mobileNavActive) {\n\t\t\ttoggleMobileNav(false);\n\t\t}\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [location]);\n\n\tconst wideScreenNav = (\n\t\t<div className='navigation flex container widescreen'>\n\t\t\t<Search />\n\t\t\t<div className=\"nav-items flex\">\n\t\t\t\t{navItems.map((item, index) => (\n\t\t\t\t\t<NavigationItem item={item} key={index}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<svg className=\"mobile-nav-toggle\" onClick={() => toggleMobileNav(true)} width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t<path fill=\"#fff\" fillRule=\"evenodd\" d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\n\t\t\t</svg>\n\t\t</div>\n\t)\n\n\tconst mobileNav = (\n\t\t<motion.div key=\"mobile-nav\" initial={{x: '100%'}} exit={{x: '100%'}}  animate={{ x: '0%' }} transition={{ duration: 0.2 }} className='navigation flex container mobile'>\n\t\t\t<Search />\n\t\t\t<svg className=\"mobile-nav-toggle\" onClick={() => toggleMobileNav(false)} width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t<path fill=\"#fff\" fillRule=\"evenodd\" d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\n\t\t\t</svg>\n\t\t\t<div className=\"nav-items\">\n\t\t\t\t{navItems.map((item, index) => (\n\t\t\t\t\t<NavigationItem item={item} key={index}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</motion.div>\n\t)\n\n\tif (navItems) {\n\t\treturn (\n\t\t\t<AnimatePresence>\n\t\t\t\t{mobileNavActive ? mobileNav : wideScreenNav}\n\t\t\t</AnimatePresence>\n\t\t);\n\t} else if (notFound) {\n\t\treturn <NotFound />;\n\t}\n\treturn null;\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport Heading from './Heading';\n\nfunction TextSlice({item, index}) {\n    return (\n        <React.Fragment key={index}>\n            <Heading headingData={item.primary['text_heading']} />\n            {RichText.render(item.primary.text)}\n            {item.items.map((text, i) => {\n                return <div className=\"rich-text\" key={i}>\n                    {RichText.render(text['body_text'])}\n                </div> \n            })}\n        </React.Fragment>\n    )\n}\n\nexport default TextSlice;","import React from 'react';\nimport '../../styles/components/Button.css'\n\nfunction Button({onClick, children, label}) {\n    return (\n        <button className=\"btn btn-default\" onClick={onClick ? onClick : () => {}}>\n            { children ? children : label }\n        </button>\n    )\n};\n\nexport default Button;","import React from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport Heading from './Heading';\nimport Image from './Image';\nimport Button from './Button';\n\nfunction BannerSlice({item, index}) {\n    const {\n        'button_label': buttonLabel,\n        'button_link': buttonLink,\n        description,\n        'image_banner': imageBanner,\n        'title_of_banner': bannerTitle\n    } = item.primary\n    return (\n        <React.Fragment>\n            <Image data={imageBanner} fullWidth='true'/>\n            <Heading headingData={bannerTitle}/>\n            {RichText.render(description)}\n            <Button>\n                <a href={buttonLink.url}>{buttonLabel[0].text}</a>\n            </Button>   \n        </React.Fragment>\n    )\n}\n\nexport default BannerSlice;","import React from 'react';\nimport TextSlice from '../components/atoms/TextSlice';\nimport BannerSlice from '../components/atoms/BannerSlice';\n\nfunction Slice({ items }) {\n\tfunction renderSliceType(item, index) {\n\t\tswitch (item['slice_type']) {\n\t\t\tcase 'text':\n                return <TextSlice item={item} index={index} key={index} />;\n            case 'banner_with_caption':\n                return <BannerSlice item={item} key={index}/>\n            default:\n                return null;\n\t\t}\n\t}\n\treturn (\n\t\t<div className='slice'>\n\t\t\t{items.map((item, index) => renderSliceType(item, index))}\n\t\t</div>\n\t);\n}\n\nexport default Slice;\n","import React, { useState, useEffect } from 'react';\nimport { client } from '../prismic-configuration';\nimport Heading from '../components/atoms/Heading';\nimport { useParams } from 'react-router-dom';\nimport Image from '../components/atoms/Image';\nimport '../styles/components/PostDetail.css'\nimport { RichText } from 'prismic-reactjs';\nimport Slice from '../components/Slice'\n\nfunction PostDetail() {\n\tconst [doc, setDocData] = useState(null);\n\tconst [notFound, setNotFound] = useState(null);\n\tlet { uid } = useParams();\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await client.getByUID('post', uid);\n\t\t\tif (result && result.data) {\n\t\t\t\tsetDocData(result.data);\n\t\t\t} else {\n\t\t\t\tsetNotFound(true);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [uid]);\n\n\treturn (\n\t\t<div className='post-detail fill-height background-dark'>\n\t\t\t{doc && (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<Image data={doc['post_hintergrund']} fullWidth='true' />\n\t\t\t\t\t<div className='head-section'>\n\t\t\t\t\t\t<Heading headingData={doc['blog_header']} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<Heading headingData={doc['abschnitt_1_header']}/>\n\t\t\t\t\t{RichText.render(doc['abschnitt_1_text'])}\n\t\t\t\t\t<Slice items={doc.body} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t\t{notFound && (\n\t\t\t\t<Heading\n\t\t\t\t\ttype='1'\n\t\t\t\t\theadingData={{ text: 'Dieser Artikel existiert nicht' }}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default PostDetail;\n","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { apiEndpoint } from './prismic-configuration';\nimport { Preview, NotFound, Landingpage, Category, SearchResults } from './pages';\nimport './styles/variables.css';\nimport './styles/base.css';\nimport Navigation from './components/Navigation';\nimport PostDetail from './pages/PostDetail';\n\nconst App = () => {\n\tconst repoNameArray = /([^/]+)\\.cdn.prismic\\.io\\/api/.exec(apiEndpoint);\n\tconst repoName = repoNameArray[1];\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Helmet>\n\t\t\t\t<script\n\t\t\t\t\tasync\n\t\t\t\t\tdefer\n\t\t\t\t\tsrc={`//static.cdn.prismic.io/prismic.js?repo=${repoName}&new=true`}\n\t\t\t\t/>\n\t\t\t</Helmet>\n\t\t\t<HashRouter>\n\t\t\t\t<Navigation />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Redirect exact from='/' to='/home' />\n\t\t\t\t\t<Route exact path='/preview' component={Preview} />\n\t\t\t\t\t<Route exact path='/home' component={Landingpage} />\n\t\t\t\t\t<Route exact path='/category/:name' component={Category} />\n\t\t\t\t\t<Route exact path='/category/:name/:uid' component={PostDetail} />\n\t\t\t\t\t<Route exact path='/search' component={SearchResults} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}